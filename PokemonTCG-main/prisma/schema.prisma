generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:0183944118@localhost:3306/pokemon"
}

model pokemon {
  id          Int      @id @default(autoincrement())
  name        String
  type        String
  rarity      String
  imageUri    String
  description String
  createdAt   DateTime @default(now())
}

model user {
  id        String   @id @default(uuid())
  email     String   @unique(map: "User_email_key")
  password  String
  createdAt DateTime @default(now())
  username  String
  decks     Deck[]
}

model Deck {
  id          String     @id @default(uuid())
  name        String
  userId      String
  userAddress String
  createdAt   DateTime   @default(now())
  user        user       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Deck_userId_fkey")
  cards       DeckCard[]

  @@index([userId], map: "userId_idx")
  @@map("deck")
}

model DeckCard {
  id       String @id @default(uuid())
  deckId   String
  tokenId  String
  name     String
  imageUrl String @db.Text
  rarity   String
  type     String
  deck     Deck   @relation(fields: [deckId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([deckId], map: "deck_card_deckId_fkey")
  @@map("deck_card")
}

model room {
  id            String   @id
  name          String
  isPrivate     Boolean  @default(false)
  password      String?
  players       Int      @default(1)
  isFinished    Boolean  @default(false)
  createdAt     DateTime @default(now())
  creatorId     String
  winnerId      String?
  player1Id     String
  player2Id     String?
  player1DeckId String?
  player2DeckId String?
  player1Avatar String?  @db.Text
  player2Avatar String?  @db.Text
  player1Ready  Boolean  @default(false)
  player2Ready  Boolean  @default(false)
  wagerRarity   String?  @db.VarChar(50)
  wagerCardId1  String?
  wagerCardId2  String?
}
